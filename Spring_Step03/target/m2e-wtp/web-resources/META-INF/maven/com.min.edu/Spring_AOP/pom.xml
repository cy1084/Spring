<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.min.edu</groupId>
	<artifactId>Spring_AOP</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>Spring_AOP Maven Webapp</name>
	<url>http://maven.apache.org</url>
	<properties>
		<!--전자 정부 표준 프레임워크 4.2.0d의 기본 버전-->
		<org.springframework-version>5.3.27</org.springframework-version>
		<!--spring AOP 관점 지향 프로그래밍에서 사용-->
		<org.aspectj-version>1.9.9.1</org.aspectj-version>
		<!--로그 처리-->
		<org.slf4j-version>2.0.7</org.slf4j-version>
	</properties>


	<dependencies>
		<!-- Spring 관련 core, MVC 개발에 필요한 라이브러리 -->
		<!-- bean을 만들어줌-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
			<exclusions>
				<!-- Exclude: 현재 artifactId에서 제외하기 위한 선언 -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!--spring MVC 개발에 Sterotype인 @Component @Controller @Service @Repository의 어노테이션 기능을 사용할 수 있도록 해주는 선언-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>

		<!-- Logging을 자동으로 처리해주는 라이브러리 log4j.jar보다 향상된 기능-->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>

		<!-- 
			@Inject: 생성된 bean을 주입하는 방식 중 하나/ 자바를 통해 주입/ 잘 안씀 
			타입 기반의 주입 @Autowired
			이름 기반의 주입 @Resource	
		-->
		<!--잘 안씀-->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>

		<!-- 
			Servlet: tomcat이 가지고 있는 라이브러리 
			우리는 tomcat 4.0 deployment descriptor 버전 사용
			배포되면 tomcat에 배포하기 때문에 필요없음
		-->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>

		<!--tomcat 4.0이면 jstl은 javax.servlet에 사용됨-->
		<!--tomcat 5.0 or 6.0이라면 jakarta로 변경되었기 때문에 새로운 jstl 버전을 받아야 함-->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>

		<!-- lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.32</version>
		</dependency>


		<!-- AspectJ: 관점 지향 프로그래밍/ dao, controller 등을 제외한 로그, transaction, 예외 처리를 자동으로 처리해주는 방법-->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.9.22.1</version>
		</dependency>

		<!--자바의 문자열을 쉽게 처리할 수 있는 메소드를 제공해주는 라이브러리-->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.12.0</version>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>32.1.3-jre</version>
		</dependency>

		<!--우리가 알고 있는 jdbc 6단계를 다 빈으로 등록하기 위한 라이브러리들-->
		<!--TODO 014 오라클 접속 드라이버-->
		<dependency>
			<groupId>com.oracle.database.jdbc</groupId>
			<artifactId>ojdbc11</artifactId>
			<version>23.3.0.23.09</version>
		</dependency>

		<!--TODO 014 MyBatis 라이브러리 2.x, 3.x-->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.5.6</version>
		</dependency>

		<!--TODO 014 DB 접속 정보 값인 properties 파일을 bean으로 생성하기 위한 라이브러리-->
		<!--property 읽어오는 객체-->
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>

		<!--TODO 014 Spring에서 MyBatis를 bean으로 사용하기 위한 라이브러리-->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>3.0.3</version>
		</dependency>

		<!--TODO 014 Spring에서 transaction을 처리하기 위한 라이브러리-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>6.1.10</version>
		</dependency>

		<!--junit은 자바만 테스트 할 수 있는데, 테스트 할 때 spring에 만들어진 bean들을 다 끌어오기 위한 라이브러리 추가해줘야 함-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework-version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>
	<build>
		<finalName>Spring_AOP</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.11.0</version>
				<configuration>
					<source>17</source>
					<target>17</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.3.2</version>
			</plugin>
		</plugins>
	</build>
</project>